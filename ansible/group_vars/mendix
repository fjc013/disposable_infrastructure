# Variables associated with inventory group "Mendix"
#
# The mendix user (and group)
mendix_user: "mxapp"
m2ee_homeDir: /home/{{ mendix_user }}/
m2ee_configDir: .m2ee/
m2ee_configFile: m2ee.yaml
#
#
m2ee_pathToYaml: '{{ m2ee_homeDir }}{{ m2ee_configDir }}{{ m2ee_configFile }}'
m2ee_pathToM2ee: /usr/bin/m2ee
m2ee_m2eeStart: start
m2ee_m2eeRestart: restart
m2ee_m2eeStop: stop
#
# Slack API Token - try globalvars dir later
#
m2ee_SlackToken: T08GJ1W1X/B0Y5TRKHS/6Whm5kUT0j9qZp2SdCiF2Ygc 
m2ee_SlackChannel: "#ansible-work"
#
# The mendix user's password - crypted with python crypt
# mkpasswd --method=SHA-512 (SomeSalt)
mendix_password: "$6$W9.0N9M2jd$kekpOUr9GG./Lr1u5KZDS1h5xRTuohBdqKs0cJyyzLWnD8lVR8nB4mmMQZH2v8wM9iCJ5nvxx2Z7bi5sjWcLm0"
epel_repo: "http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-6.noarch.rpm"
epel_repo_rpm: "/var/tmp/epel-release-7-6.noarch.rpm"
#
# Postgres Options
# dbname == mendix_user
# dbuser = mendix_user
# dbpassword == (see docs) created with  echo "md5`echo -n "SomeSaltmxapp" | openssl md5`"
# prior echo command doesn't work as is. Prefix openssl md5 output with "md5"
dbname: '{{mendix_user}}'
dbuser: '{{mendix_user}}'
dbpassword: md539089376c5e5a1bfc009392835bc17bf
#dbname: mxdb
#dbuser: mxdbuser
#dbpassword: md54e1f9f3649f8d842885fa3b9433714a6
dbhost: localhost
dbport: 5432
#
# Need a Mendix logging file
mendix_logdir: "/var/log/mendix/{{mendix_user}}/"
#
# Begin m2ee.yaml attributes
#
# Originally from appd_provision/m2ee/vars
m2ee_appAgentHome: /opt/appdynamics/appagent/
m2ee_appAgentJar: javaagent.jar
#
#
# Insert an mxnode: section into m2ee.yaml that defines the mxjar_repo list
#  required for the download_runtime m2ee command - must be writable
mxjar_repo:
  - 'mxnode:'
  - ' mxjar_repo: /srv/mendix/{{ mendix_user }}/data/runtime'
  - ' '
#
# Define dict to hold search pattern and new values
# regex=(^[\s]varname\:) use backrefs as \1\ new value
#
m2ee_vars:
  - { varname: '(^[\s]*app_name\:)', value: '\1 ACMEOnline' }
  - { varname: '(^[\s]*app_base\:)', value: '\1 /srv/mendix/{{ mendix_user }}' }
  - { varname: '(^[\s]*admin_pass\:)', value: '\1 $SomeSalt$' }
  - { varname: '(^[\s]*logfile\:)', value: '\1 {{ mendix_logdir }}log' }
  - { varname: '(^[\s]*filename\:)', value: '\1 {{ mendix_logdir }}/log' }
  - { varname: '(^[\s]*DatabaseType\:)', value: '\1 PostgreSQL' }
  - { varname: '(^[\s]*DatabaseHost\:)', value: '\1 {{ dbhost }}:{{ dbport }}' }
  - { varname: '(^[\s]*DatabaseName\:)', value: '\1 {{ dbname }}' }
  - { varname: '(^[\s]*DatabaseUserName\:)', value: '\1 {{ dbuser }}' }
  - { varname: '(^[\s]*DatabasePassword\:)', value: '\1 {{ dbpassword }}' }
  - { varname: '^[\s]*\#(runtime_listen.*)', value: ' \1' }
#
# Define where to find a sample .mda file and where to put it.
mda_url: http://download.mendix.com/sample/
mda_filename: sample.mda
sample_mda: '{{ mda_url }}{{ mda_filename }}'
# sample_mda: http://download.mendix.com/sample/sample.mda
destdir_mda: /srv/mendix/{{ mendix_user }}/data/model-upload/
expect_m2ee_script: setup.exp
#
# All Mendix hosts share the same AppD controller info
#
# Formerly known as appd_vars.yml- from Thiago
#
# Hand rolled Controller from playbook
# controller_hostName: 192.168.100.103
#
# Non-Prod Controller built by ESM
controller_hostName: npappd.erieinsurance.com
controller_port: 8090
applicationName: ACMEOnline
agent_tierName: Inventory
agent_nodeName: '{{ ansible_hostname }}'
# Keys are generated at the Controller during build
# agent_accountAccessKey: e8c469e5-94a3-49d8-8efc-732ff91204fe
#
# Non-Prod Controller key
agent_accountAccessKey: 3be9858c-0790-4677-af18-9c7abc756aa2 
#
#
# Insert the following into the m2ee.yaml javaopts section
m2ee_jvmArg: '   "-javaagent:{{ m2ee_appAgentHome }}{{ m2ee_appAgentJar }}", "-Dappdynamics.agent.uniqueHostId={{ ansible_hostname }}", "-Dappdynamics.controller.hostName={{ controller_hostName }}", "-Dappdynamics.controller.port={{ controller_port }}", "-Dappdynamics.agent.applicationName={{ applicationName }}", "-Dappdynamics.agent.tierName={{ agent_tierName }}", "-Dappdynamics.agent.nodeName={{ agent_nodeName }}", "-Dappdynamics.agent.accountAccessKey={{ agent_accountAccessKey }}",'