---
# Tasks to uncover the type of Java environment the remote
# # host is using. The key attribute is 'java.vendor'. Expect 
# # to see one of these two:
# #
# # java.vendor = Oracle Corporation
# # java.vendor = IBM Coporation
# #
# # Java properties appear in StdErr, not StdOut, but can be funnelled there.
# #
# # Use set_fact to define which app agent to move to remote
# #
# #  Remote_user is found in ansible.cfg
#
- shell: java -XshowSettings:properties -version 2>&1 | grep 'java.vendor'
  register: java_properties
  tags: appagent
#
- set_fact: java_vendor=oracle
  when: "'Oracle' in java_properties.stdout"
  tags: appagent
#
- set_fact: java_vendor=ibm
  when: "'IBM' in java_properties.stdout"
  tags: appagent
#
- debug: msg="Java vendor {{ java_vendor }} is"
  when: debug_flag is defined
  tags: appagent
#
# Install the App Server Agent for java on RedHat derivatives
#
- name: Ensures {{ appagent_destFolder }} dir exists
  file: path={{ appagent_destFolder }} state=directory
  tags: appagent
#
- name: Copy app agent file archive
  copy: src={{ ansible_os_family }}/{{ java_vendor }}/{{ appagent_srcFile }} dest={{ appagent_destFolder }}{{ appagent_destFile }} force=no
  tags: appagent
#
- name: Unzip the App Agent file
  unarchive: src={{ appagent_destFolder }}{{ appagent_destFile }} dest={{ appagent_destFolder }} copy=no
  tags: appagent
#
- name: Ensure the app agent is executable
  file: path={{ appagent_destFolder }}{{ appagent_processName }} mode=0755
  tags: appagent
#
# The appagent archive is missing an Inventory directory within the verx.x.x/logs directory
# find where it goes, and create it.
#
- name: Find where the Inventory directory goes
  shell: find {{ appagent_destFolder }} -name 'logs' -type d -print
  register: path_to_ver_logs
  tags: appagent
#
# Create the Inventory directory
#
- name: Create the Inventory directory
  file: path={{ path_to_ver_logs.stdout }}/Inventory state=directory mode=0777
  when: path_to_ver_logs.stdout != ""
  tags: appagent
#  
#
# Create the host specific log directory
#
- name: Create the host-specific log directory
  file: path={{ path_to_ver_logs.stdout }}/{{ ansible_hostname }} state=directory mode=0777
  when: path_to_ver_logs.stdout != ""
  tags: appagent
#  
# Apply custom config to controller-info.xml
#
- name: Configure controller-info.xml
  lineinfile: dest="{{ appagent_destFolder }}/conf/controller-info.xml" 
    backrefs=yes
    state=present
    regexp={{ item.varname }}
    line={{ item.value }}
  with_items:
    - '{{ vars_controllerInfo }}'
  tags: appagent
#
# fin